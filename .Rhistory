devtools::document()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
library(mvtnorm)
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::document()
#' @param thin the number of between-sample random numbers
#' @return a random sample of size \code{n}
#' @examples
#' \dontrun{
#' rnR <- gibbsR(100,10)
#' par(mfrow=c(2,1));
#' plot(rnR[,1],type='l')
#' plot(rnR[,2],type='l')
#' }
#' @export
mls <-  function(x0,data_temp){
a=0
models <- function(x,theta){
matrix(theta, nrow = 2,ncol = 3, byrow = T)%*%matrix(c(1-x^2,2*x*(1-x),x^2), nrow = 3, ncol = length(x),byrow = T)
}
loss = function(theta, x, y){
exp(-(x-x0)^2/0.09)%*%sqrt(apply((t(y)-models(x, theta))^2,2,sum))
}
theta0 <- c(0, 0, 0, 0, 0, 0)
theta.L <- optim(theta0, loss, x=data_temp[data_temp[-x0,]$Longitude != 0, ]$index,
y=data_temp[data_temp[-x0,]$Latitude != 0, c('Longitude','Latitude')], method = "BFGS")
theta.L
models(x0,theta.L$`par`)
a = models(x0,theta.L$`par`)
return(a)
}
devtools::document()
devtools::document()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::build_vignettes()
git init
git
git add *
git init
