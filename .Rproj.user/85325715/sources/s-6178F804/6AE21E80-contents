library(gdata)
library(ROCR)
library(bcpa)
library(adehabitatLT)
library(chron)
library(sp)
library(rgdal)
library(lubridate)
library(car)
library(forecast)


perl <- "C:/strawberry/perl/bin/perl5.28.1.exe"
data_17fly <- read.csv('C:/Users/chong9/.spyder-py3/TCN/data_17fly.csv', stringsAsFactors = FALSE)
data_17fly$UTC_datetime <- as.POSIXct(data_17fly$UTC_datetime, tryFormats = c("%Y/%m/%d %H:%M"))
data_17fly <- read.csv('C:/Users/chong9/.spyder-py3/TCN/data2017fly.csv', stringsAsFactors = FALSE)
data_17fly <- data_17fly[data_17fly$Altitude_m >= 400,]
data18fly <- read.csv('C:/Users/chong9/.spyder-py3/TCN/data18fly.csv', stringsAsFactors = FALSE)
data18fly$UTC_datetime <- as.POSIXct(data18fly$UTC_datetime, tryFormats = c("%Y/%m/%d %H:%M"))

# calculate the change

for (i in 2:nrow(data_17fly)) {
  data_17fly$deltax <- data_17fly[-1,]$Latitude - data_17fly$Latitude
  data_17fly$deltay <- data_17fly[-1,]$Longitude - data_17fly$Longitude
  data_17fly$deltaz <- data_17fly[-1,]$Altitude_m - data_17fly$Altitude_m
}
for (i in 2:nrow(data18fly)) {
  data18fly$deltax <- data18fly[-1,]$Latitude - data18fly$Latitude
  data18fly$deltay <- data18fly[-1,]$Longitude - data18fly$Longitude
  data18fly$deltaz <- data18fly[-1,]$Altitude_m - data18fly$Altitude_m
}

# code for the date
data_17fly$day <- day(data_17fly$UTC_datetime)
data_17fly$time <- minute(data_17fly$UTC_datetime)+hour(data_17fly$UTC_datetime)*60

data_17fly$deltaz <- data_17fly$deltaz/1000
data_17fly$deltax <- data_17fly$deltax*111
data_17fly$deltay <- data_17fly$deltay*111*cos(data_17fly$deltax)

data18fly$day <- day(data18fly$UTC_datetime)
data18fly$time <- minute(data18fly$UTC_datetime)+hour(data18fly$UTC_datetime)*60

data18fly$deltaz <- data18fly$deltaz/1000
data18fly$deltax <- data18fly$deltax*111
data18fly$deltay <- data18fly$deltay*111*cos(data18fly$deltax)

# code for the light
for (i in 1:length(data_17fly$light)) {
  if(data_17fly[i,]$light == 0) data_17fly[i,]$light <- 0
  if(data_17fly[i,]$light != 0) data_17fly[i,]$light <- 1
}

for (i in 1:length(data_17fly$light)) {
  if(data18fly[i,]$light == 0) data18fly[i,]$light <- 0
  if(data18fly[i,]$light != 0) data18fly[i,]$light <- 1
}


# code for speed
data_17fly$speedx <- data_17fly$speed_km_h*cos(data_17fly$direction_deg*2*pi/360)
data_17fly$speedy <- data_17fly$speed_km_h*sin(data_17fly$direction_deg*2*pi/360)
data_17fly$speedz <- data_17fly$deltaz*3

data_17fly$speedx <- data_17fly$deltax*3
data_17fly$speedy <- data_17fly$deltay*3
data_17fly$speedz <- data_17fly$deltaz*3

data18fly$speedx <- data18fly$speed_km_h*cos(data18fly$direction_deg*2*pi/360)
data18fly$speedy <- data18fly$speed_km_h*sin(data18fly$direction_deg*2*pi/360)
data18fly$speedz <- data18fly$deltaz*3

write.csv(data_17fly,"C:/Users/chong9/.spyder-py3/TCN/data_17fly.csv")
write.csv(data_17fly,"C:/Users/chong9/.spyder-py3/TCN/data2017fly.csv")
write.csv(data18fly,"C:/Users/chong9/.spyder-py3/TCN/data18fly.csv")

# code for the fly 

for (i in 1:length(data_17fly$speed_km_h)) {
  if(data_17fly[i,]$speed_km_h <= 10) data_17fly[i,]$flag <- 0
  if(data_17fly[i,]$speed_km_h > 10) data_17fly[i,]$flag <- 1
}


#linear model
mymodel <- function(x,y){
  a=0
  model1 <- function(x,theta){
    matrix(theta, nrow = 1,ncol = 3, byrow = T)%*%matrix(x, nrow = 3, byrow = F)
  }
  loss = function(theta, x, y){
    sum(y-model1(x,theta))^2 
  }
  theta0 <- c(0, 0, 0)
  theta.L <- optim(theta0, loss, x=x, y=y, method = "BFGS")
  theta.L
}

data_17fly2 <- data_17fly[c(-1,-2,-3),]
data_17fly2$delta1x <- data_17fly[c(1:(nrow(data_17fly)-3)),]$deltax
data_17fly2$delta2x <- data_17fly[c(2:(nrow(data_17fly)-2)),]$deltax
data_17fly2$delta3x <- data_17fly[c(3:(nrow(data_17fly)-1)),]$deltax
data_17fly2$delta4x <- data_17fly[c(4:nrow(data_17fly)),]$deltax
model11 <- lm(speedx ~delta1x+delta2x+delta3x+delta4x+ temperature_C+light+time,data=data_17fly2)
summary(model11)
select<-sample(1:nrow(data_17fly2),nrow(data_17fly2)*0.7)
train <- data_17fly2[select,]
test <- data_17fly2[-select,]


delta <- data_17fly[,c(17,18,19)]
delta <- as.matrix(delta)
fit <- lm(speedx~temperature_C+light+acc_x+day+time,data=data_17fly)
summary(fit)


data_17fly =data_17fly[-nrow(data_17fly),]
data_17fly[nrow(data_17fly),]
select<-sample(1:nrow(data_17fly),nrow(data_17fly)*0.7)
train <- data_17fly[select,]
test <- data_17fly[-select,]
loss <- matrix(0,nrow(test),3) 

model1 <- lm(speedx ~deltax+temperature_C+light+day+time,data=data_17fly)
summary(model1)
test$pred <- predict(model11, test, type = "response")
loss[,1] <- test$speedx - test$pred
plot(test$speedx , test$pred)

scatterplotMatrix(model1,spread = FALSE,lty = 2)
pairs(~speed_km_h+direction_deg+temperature_C+day+time+acc_x,data = data_17fly )
par(mfrow = c(3, 3))
plot(data_17fly$deltax,data_17fly$speed_km_h )
plot(data_17fly$deltax,data_17fly$direction_deg )
plot(data_17fly$deltax,data_17fly$light )
plot(data_17fly$speedx,data_17fly$temperature_C )
plot(data_17fly$deltax,data_17fly$acc_x )
plot(data_17fly$deltax,data_17fly$time )
plot(data_17fly$deltax,data_17fly$day )
plot(data_17fly$deltax,data_17fly$mag_x)
par(mfrow = c(1,1))
plot(data_17fly$speedx,data_17fly$acc_x)
plot(data_17fly$speedy,data_17fly$acc_y)
plot(data_17fly$speedz,data_17fly$acc_z)
plot(data_17fly$speedx,data_17fly$deltax)
plot(data_17fly$speedy,data_17fly$Longitude)
plot(data_17fly$speedz,data_17fly$time)


model2 <- lm(speedy ~ Latitude+Longitude+deltay+temperature_C+light+day+time,data=data_17fly)
summary(model2)
test$pred <- predict(model2, test, type = "response")
loss[,2] <- test$speedy - test$pred
plot(test$speedy , test$pred)


model3 <- lm(speedz ~Latitude+Longitude+temperature_C+light+day+time,data=data_17fly)
summary(model3)
test$pred <- predict(model3, test, type = "response")
loss[,3] <- test$speedz - test$pred
loss_lm <- rep(0,nrow(loss))
for (i in 1:nrow(loss)) {
  loss_lm[i]<- sum(loss[i,]^2)/3
}
loss_lm
sum(loss_lm)/length(loss_lm)

  #pred <- prediction(test$pred, test$OGTT1)
  #AUC[i] <- performance(pred, 'auc')@y.values  


#loss curve
hist(loss[loss>=-10 & loss<=10], xlim = c(-10,10), breaks = seq(-10,10,1), main = 'loss')
plot(loss,type = 'h')
mseq
hist(loss_lm[loss_lm<=1], xlim = c(0,1), breaks = seq(0,1,0.02),  main = 'loss')


loss_ml <- read.csv('C:/Users/chong9/.spyder-py3/TCN/loss.csv', stringsAsFactors = FALSE)
hist(loss_ml[loss_ml<=10], xlim = c(0,10), breaks = seq(0,10,0.5), freq=F, main = 'loss')
hist(loss_ml[loss_ml<=2], xlim = c(0,2), breaks = seq(0,2,0.02), freq=T, main = 'loss')
mean(loss_ml)
sum(loss_ml)/nrow(loss_ml)

hist(data_17fly$deltax[data_17fly$deltax>=-30 & data_17fly$deltax<=10] ,xlim = c(-30,10), breaks = seq(-30,10,2), freq=F, main = 'deltax')
y_real <- read.csv('C:/Users/chong9/.spyder-py3/TCN/y_mls.csv', stringsAsFactors = FALSE)
y_pred <- read.csv('C:/Users/chong9/.spyder-py3/TCN/y_pred.csv', stringsAsFactors = FALSE)
plot(y_pred[,1],y_real[,1])



#2018


data18fly$day <- day(data18fly$UTC_datetime)
data18fly$time <- minute(data18fly$UTC_datetime)+hour(data18fly$UTC_datetime)*60

data18fly$deltaz <- data18fly$deltaz/1000
data18fly$deltax <- data18fly$deltax*111
data18fly$deltay <- data18fly$deltay*111*cos(data18fly$deltax)

write.csv(data18fly,"C:/Users/chong9/.spyder-py3/TCN/data_18fly.csv")



# arma

nrow(data_17fly)
train <- data_17fly[c(1:5800),]$speedx
plot(train,type = 'l')
test <- data_17fly[c(5801:5984),]$speedx
dd <- diff(train,1)
acf(dd)
pacf(dd)
plot(dd,type = 'l')
model23 <- arima(x = dd,order = c(1,0,1))
summary(model23)
test$pred <- predict(model23, test, type = "response")
forecast <- forecast(model23,h=184,level=c(99.5))
forecast
