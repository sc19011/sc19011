library(gdata)
library(ROCR)
#data cleaning 
perl <- "C:/strawberry/perl/bin/perl5.28.1.exe"
data <- read.xls('D:/生统实验/血糖相关数据01.xlsx', 
                 stringsAsFactors = FALSE, fileEncoding="UTF-8")
data1 <- data[!is.na(data$TOGTT), ]
data1 <- data1[, c(-1,-5)]
colnames(data1) <- c('sex', 'patientage', 'marraged', 'height', 'weight', 'AGE', 'IR', 'FPG', 'OGTT', 
                     'HBA1C', '总胆固醇', '甘油三酯','高密度脂蛋白', '低密度脂蛋白', '舒张压', 
                     '收缩压', '尿素氮', '尿素氮.1', '尿酸')
data1$sex <- ifelse(data1$sex == '男', 'male', 'female')
for (i in 1:length(data1$marraged)) {
  if(data1$marraged[i] == '已婚') data1$marraged[i] <- 'married'
  if(data1$marraged[i] == '未婚') data1$marraged[i] <- 'single'
}
data1 <- data1[data1$marraged == 'married' | data1$marraged == 'single', ]

#bmi
data1$height <- as.numeric(data1$height)
data1$weight <- as.numeric(data1$weight)
data1$bmi <- data1$weight/(data1$height/100)^2
data2 <- data1[!is.na(data1$bmi) & (data1$bmi < 50) & (data1$bmi > 10), ]

#choosing 
fit <- lm(OGTT~.,data=data1)
coe1 <- summary(fit)$coef; 
colnames(coe1) <- c('Est','SE','t.value','p-value') 
data.frame(round(coe1[,1:3],3),pval=coe1[,4])
write.table(coe1, file = 'D:/生统实验/coe_lm.txt',sep = '\t')
data2$OGTT1 <- ifelse(data2$OGTT > 7.8, 1, 0)
fit2 <-  glm(OGTT1~sex+ AGE+ HBA1C+ IR+ FPG+ bmi+ marraged +总胆固醇+甘油三酯+ 尿酸,
             data = data2, family = 'binomial'(link ='logit'))
coe2 <- summary(fit2)$coef 
colnames(coe2) <- c('Est','SE','z.value','p-value') 
data.frame(round(coe2[,1:3],3),pval=coe2[,4])
write.table(coe2, file = 'D:/生统实验/coe_glm.csv', sep = '\t')
par(mfrow = c(2, 2))
with(data2, plot(FPG,OGTT))
with(data2, plot(bmi,OGTT))
with(data2, plot(IR,OGTT))
with(data2, plot(HBA1C,OGTT))
par(mfrow = c(1, 1))
step(fit2)
data2 <- data2[, c(1:10,20,21)]

#prediction using FPG
data_fpg <- data2[!is.na(data2$FPG), ]
write.table(data_fpg, file = 'data_fpg.dat', sep = '\t')
AUC <- rep(0,100) 
FPR <- matrix(seq(0,1,0.01),101,101,byrow = T)
TPR <- matrix(0,101,101)
TPR[,101] <- 1
for (i in 1:100) {
  select<-sample(1:nrow(data_fpg),length(data_fpg$OGTT)*0.7)
  train <- data_fpg[select,]
  test <- data_fpg[-select,]
  model1 <- glm(OGTT1~bmi + FPG + patientage + sex, data = train, family = 'binomial'(link ='logit'))
  summary(model1)
  test$pred <- predict(model1, test, type = "response")
  tpr <- fpr <- rep(0,100)
  for (j in 0:100) {
    point <- j/100
    tp <- sum(test$pred > point & test$OGTT1 == 1)
    fp <- sum(test$pred > point & test$OGTT1 == 0)
    tn <- sum(test$pred < point & test$OGTT1 == 0)
    fn <- sum(test$pred < point & test$OGTT1 == 1)
    tpr[j+1] <- tp/(tp+fn)
    fpr[j+1] <- fp/(tn+fp)  
  }
  for (k in 1:100) {
    for (j in 1:100) {
      if(fpr[k]>= FPR[i, j] & fpr[k+1]<FPR[i,j]){
        if(fpr[k]-fpr[k+1] == 0) TPR[i,j] <- tpr[k+1]
        else TPR[i,j] <- tpr[k+1]+(FPR[i,j]-fpr[k+1])*(tpr[k]-tpr[k+1])/(fpr[k]-fpr[k+1])
      }
    }
  }
  pred <- prediction(test$pred, test$OGTT1)
  AUC[i] <- performance(pred, 'auc')@y.values  
}
auc <- rep(0,3)
auc[1] <- sum(as.numeric(AUC)/100)  #FPG AUC
auc[1]
#roc curve
for (i in 1:101) {
  TPR[101,i] <- sum(TPR[,i])/100
}
plot(FPR[101,],TPR[101,],type = 'l', xlab = 'FPR', ylab = 'TPR')

#prediction using IR
data_IR <- data2[!is.na(data2$IR), ]
for (i in 1:length(data_IR$IR)) {
  if(data_IR$IR[i] < 55) data_IR$IR2[i] <- 1
  else if(data_IR$IR[i] > 75) data_IR$IR2[i] <- 3
  else  data_IR$IR2[i] <- 2
}
data_IR$IR2 <- as.factor(data_IR$IR2)
model2 <- glm(OGTT1~bmi + IR2 + patientage + sex + AGE, data = data_IR, family = 'binomial'(link ='logit'))
coe3 <- summary(model2)$coef
write.table(coe3, file = 'D:/生统实验/coe_IR.dat', sep = '\t')
AUC <- rep(0,100)
FPR <- matrix(seq(0,1,0.01),101,101,byrow = T)
TPR <- matrix(0,101,101)
TPR[,101] <- 1
for (i in 1:100) {
  select<-sample(1:nrow(data_IR),length(data_IR$OGTT)*0.7) 
  train <- data_IR[select,]
  test <- data_IR[-select,]
  model2 <- glm(OGTT1~bmi + IR + patientage + sex, data = train, family = 'binomial'(link ='logit'))
  summary(model2)
  test$pred <- predict(model2, test, type = "response")
  tpr <- fpr <- rep(0,101)
  for (j in 0:100) {
    point <- j/100
    tp <- sum(test$pred > point & test$OGTT1 == 1)
    fp <- sum(test$pred > point & test$OGTT1 == 0)
    tn <- sum(test$pred < point & test$OGTT1 == 0)
    fn <- sum(test$pred < point & test$OGTT1 == 1)
    tpr[j+1] <- tp/(tp+fn)  
    fpr[j+1] <- fp/(tn+fp)  
  }
  for (k in 1:100) {
    for (j in 1:100) {
      if(fpr[k]>= FPR[i, j] & fpr[k+1]<FPR[i,j]){
        if(fpr[k]-fpr[k+1] == 0) TPR[i,j] <- tpr[k+1]
        else TPR[i,j] <- tpr[k+1]+(FPR[i,j]-fpr[k+1])*(tpr[k]-tpr[k+1])/(fpr[k]-fpr[k+1])
      }
    }
  }
  pred <- prediction(test$pred, test$OGTT1)
  AUC[i] <- performance(pred, 'auc')@y.values  
}
auc[2] <- sum(as.numeric(AUC)/100)  #IR AUC
auc[2]
#roc curve
for (i in 1:101) {
  TPR[101,i] <- sum(TPR[,i])/100
}
lines(FPR[101,],TPR[101,], col = 'red', lty = 2)

#prediction using HBA1C
data_HBA1C <- data2[!is.na(data2$HBA1C) & !is.na(data2$AGE), ]
AUC <- rep(0,100)
FPR <- matrix(seq(0,1,0.01),101,101,byrow = T)
TPR <- matrix(0,101,101)
TPR[,101] <- 1
for (i in 1:100) {
  select<-sample(1:nrow(data_HBA1C),length(data_HBA1C$OGTT)*0.7)
  train <- data_HBA1C[select,]
  test <- data_HBA1C[-select,]
  model3 <- glm(OGTT1~bmi + HBA1C + sex + marraged + patientage +AGE, data = train, family = 'binomial'(link ='logit'))
  summary(model3)
  test$pred <- predict(model3, test, type = "response")
  tpr <- fpr <- rep(0,100)
  for (j in 0:100) {
    point <- j/100
    tp <- sum(test$pred > point & test$OGTT1 == 1)
    fp <- sum(test$pred > point & test$OGTT1 == 0)
    tn <- sum(test$pred < point & test$OGTT1 == 0)
    fn <- sum(test$pred < point & test$OGTT1 == 1)
    tpr[j+1] <- tp/(tp+fn)  
    fpr[j+1] <- fp/(tn+fp)  
  }
  for (k in 1:100) {
    for (j in 1:100) {
      if(fpr[k]>= FPR[i, j] & fpr[k+1]<FPR[i,j]){
        if(fpr[k]-fpr[k+1] == 0) TPR[i,j] <- tpr[k+1]
        else TPR[i,j] <- tpr[k+1]+(FPR[i,j]-fpr[k+1])*(tpr[k]-tpr[k+1])/(fpr[k]-fpr[k+1])
      }
    }
  }
  #plot(fpr,tpr,type='l')
  #abline(a=0,b=1)
  pred <- prediction(test$pred, test$OGTT1)
  AUC[i] <- performance(pred, 'auc')@y.values  
}
auc[3] <- sum(as.numeric(AUC)/100)  #HBA1C AUC
auc[3]
names(auc) <- c('FPG', 'IR', 'HBA1C')

#roc curve
for (i in 1:101) {
  TPR[101,i] <- sum(TPR[,i])/100
}
lines(FPR[101,],TPR[101,], col = 'blue', lty = 3)
legend("right", inset=0.05, c('FPG','IR', 'HBA1C'), lty=c(1, 2, 3), col=c('black', "red", "blue"))
#mtext(auc ,side = 'right')
write.table(auc, file = "D:/生统实验/auc.txt")







